pipeline {
    agent {
        docker {
            image 'maven:3.6.1-jdk-8-alpine'
            args '-v $HOME/.m2:/root/.m2'
        }
    }
    
    stages {
        stage ('worker-build') {
            when {
                changeset '**/worker/**'
            }
            steps {
                echo 'compiling worker app'
                dir('worker') {
                    sh 'mvn compile'
                }
            }
        }
        stage ('worker-test') {
            when {
                changeset '**/worker/**'
            }
            steps {
                echo 'Running Unit Tests on worker app'
                dir ('worker') {
                    sh 'mvn clean test'
                }
            }
        }
        stage ('worker-package') {
            when {
                branch 'master'
                changeset '**/worker/**'
            }
            steps {
                echo 'Packaging worker app'
                dir ('worker') {
                    sh 'mvn package -D skipTests'
                    archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
                }
            }
        }
    }
    
    post {
        failure {
            slackSend (channel: "instavote-cd", color: "danger", message: "${env.JOB_NAME} >> ${env.BRANCH_NAME} branch -- # ${env.BUILD_NUMBER} succeeded after ${currentBuild.duration} millisec (<${env.BUILD_URL}|Open>)")
        }
        success {
            slackSend (channel: "instavote-cd", color: "success", message: "${env.JOB_NAME} >> ${env.BRANCH_NAME} branch -- # ${env.BUILD_NUMBER} succeeded after ${currentBuild.duration} millisec (<${env.BUILD_URL}|Open>)")
        }
        always {
            echo 'Pipeline for worker is complete..'
        }
    }
}